scalar DateTime

type Query {
    codeReview(id: ID!): CodeReview
    codeReviews(repositoryUrl: String!): [CodeReview!]!
}

type Mutation {
    initiateCodeReview(input: CodeReviewInput!): CodeReview!
}

type CodeReview {
    id: ID!
    repositoryUrl: String!
    pullRequestNumber: String!
    commitHash: String!
    status: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    overallScore: Float
    comments: [ReviewComment!]!
}

type ReviewComment {
    id: ID!
    filePath: String!
    lineNumber: Int!
    message: String!
    severity: String!
    ruleId: String!
    createdAt: DateTime!
}

input CodeReviewInput {
    repositoryUrl: String!
    pullRequestNumber: String!
    commitHash: String!
}